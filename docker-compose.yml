services:
  frontend:
    build:
      context: .  
      dockerfile: ./apps/2048-next/Dockerfile
      args:
        NODE_ENV: development
    ports:
      - '3000:3000'
    volumes:
      - /app/apps/2048-next/node_modules
    environment:
      - NODE_ENV=development
    depends_on:
      - backend
    develop:
      watch:
        - action: sync
          path: ./apps/2048-next
          target: /app/apps/2048-next
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json

        - action: sync
          path: ./packages/shared-2048-logic
          target: /app/packages/shared-2048-logic
          ignore:
            - node_modules/
    networks:
      - app-network
    command: ["pnpm", "dev"]

  backend:
    build:
      context: .
      dockerfile: ./apps/2048-express/Dockerfile
    ports:
      - '8000:8000'
    volumes:
      - /app/apps/2048-express/node_modules  
      # - ./packages/shared-2048-logic:/app/packages/shared-2048-logic
    environment:
      - NODE_ENV=development
    develop:
      watch:
        - action: sync
          path: ./apps/2048-express
          target: /app/apps/2048-express
          ignore:
            - node_modules/

        - action: rebuild
          path: package.json

        - action: sync
          path: ./packages/shared-2048-logic
          target: /app/packages/shared-2048-logic
          ignore:
            - node_modules/
    depends_on:
      - mongo
    networks:
      - app-network
    command: ["pnpm", "dev"]

  mongo:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db  # This mounts a volume to persist data
    networks:
      - app-network


volumes:
  mongo-data:  # Define the volume here
    driver: local

networks:
  app-network:
    driver: bridge

# app / apps / front and back
# app / packages / shared-logic
