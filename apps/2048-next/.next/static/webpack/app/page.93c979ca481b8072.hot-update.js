"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/../../packages/shared-2048-logic/src/utils/moveLogic.ts":
/*!***************************************************************!*\
  !*** ../../packages/shared-2048-logic/src/utils/moveLogic.ts ***!
  \***************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   moveDown: () => (/* binding */ moveDown),\n/* harmony export */   moveLeft: () => (/* binding */ moveLeft),\n/* harmony export */   moveRight: () => (/* binding */ moveRight),\n/* harmony export */   moveUp: () => (/* binding */ moveUp)\n/* harmony export */ });\n/* harmony import */ var _gridHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gridHelper */ \"(app-pages-browser)/../../packages/shared-2048-logic/src/utils/gridHelper.ts\");\n\nconst processLine = (line, direction)=>{\n    let score = 0;\n    const result = [];\n    let prev = null;\n    const orderedLine = direction === 'left' ? [\n        ...line\n    ] : [\n        ...line\n    ].reverse();\n    for (const tile of orderedLine){\n        if (!prev) {\n            prev = {\n                ...tile,\n                isMerged: false\n            };\n            continue;\n        }\n        if (prev.value === tile.value && !prev.isMerged && !tile.isMerged) {\n            result.push({\n                ...tile,\n                value: prev.value * 2,\n                isMerged: true,\n                mergedFrom: [\n                    prev.id,\n                    tile.id\n                ]\n            });\n            score += prev.value * 2;\n            prev = null;\n        } else {\n            result.push(prev);\n            prev = {\n                ...tile,\n                isMerged: false\n            };\n        }\n    }\n    if (prev) result.push(prev);\n    while(result.length < 4){\n        result.push({\n            id: crypto.randomUUID(),\n            value: 0,\n            row: -1,\n            col: -1\n        });\n    }\n    return {\n        tiles: direction === 'left' ? result : result.reverse(),\n        score\n    };\n};\nconst moveTiles = (tiles, direction)=>{\n    console.log(\"directions : \".concat(direction));\n    const grid = (0,_gridHelper__WEBPACK_IMPORTED_MODULE_0__.buildGridFromTiles)(tiles);\n    const newTiles = [];\n    let totalScore = 0;\n    let moved = false;\n    const isHorizontal = direction === 'left' || direction === 'right';\n    const isForward = direction === 'left' || direction === 'up';\n    for(let i = 0; i < 4; i++){\n        const line = isHorizontal ? grid[i].filter(Boolean) : grid.map((row)=>row[i]).filter(Boolean);\n        if (!line.length) continue;\n        const { tiles: processed, score } = processLine(line, isForward ? 'left' : 'right');\n        totalScore += score;\n        processed.forEach((tile, idx)=>{\n            if (tile.value === 0) return; // skip empty tiles\n            const row = isHorizontal ? i : idx;\n            const col = isHorizontal ? idx : i;\n            moved || (moved = tile.row !== row || tile.col !== col);\n            newTiles.push({\n                ...tile,\n                row,\n                col,\n                previousRow: tile.row,\n                previousCol: tile.col\n            });\n        });\n    }\n    return {\n        tiles: newTiles,\n        score: totalScore,\n        moved\n    };\n};\nconst moveLeft = (tiles)=>moveTiles(tiles, 'left');\nconst moveRight = (tiles)=>moveTiles(tiles, 'right');\nconst moveUp = (tiles)=>moveTiles(tiles, 'up');\nconst moveDown = (tiles)=>moveTiles(tiles, 'down');\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uLi8uLi9wYWNrYWdlcy9zaGFyZWQtMjA0OC1sb2dpYy9zcmMvdXRpbHMvbW92ZUxvZ2ljLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBR2tEO0FBR2xELE1BQU1DLGNBQWMsQ0FBQ0MsTUFBa0JDO0lBQ3JDLElBQUlDLFFBQVE7SUFDWixNQUFNQyxTQUFxQixFQUFFO0lBQzdCLElBQUlDLE9BQXdCO0lBRTVCLE1BQU1DLGNBQWNKLGNBQWMsU0FBUztXQUFJRDtLQUFLLEdBQUc7V0FBSUE7S0FBSyxDQUFDTSxPQUFPO0lBRXhFLEtBQUssTUFBTUMsUUFBUUYsWUFBYTtRQUM5QixJQUFJLENBQUNELE1BQU07WUFDVEEsT0FBTztnQkFBRSxHQUFHRyxJQUFJO2dCQUFFQyxVQUFVO1lBQU07WUFDbEM7UUFDRjtRQUVBLElBQUlKLEtBQUtLLEtBQUssS0FBS0YsS0FBS0UsS0FBSyxJQUFJLENBQUNMLEtBQUtJLFFBQVEsSUFBSSxDQUFDRCxLQUFLQyxRQUFRLEVBQUU7WUFDakVMLE9BQU9PLElBQUksQ0FBQztnQkFDVixHQUFHSCxJQUFJO2dCQUNQRSxPQUFPTCxLQUFLSyxLQUFLLEdBQUc7Z0JBQ3BCRCxVQUFVO2dCQUNWRyxZQUFZO29CQUFDUCxLQUFLUSxFQUFFO29CQUFFTCxLQUFLSyxFQUFFO2lCQUFDO1lBQ2hDO1lBQ0FWLFNBQVNFLEtBQUtLLEtBQUssR0FBRztZQUN0QkwsT0FBTztRQUNULE9BQU87WUFDTEQsT0FBT08sSUFBSSxDQUFDTjtZQUNaQSxPQUFPO2dCQUFFLEdBQUdHLElBQUk7Z0JBQUVDLFVBQVU7WUFBTTtRQUNwQztJQUNGO0lBRUEsSUFBSUosTUFBTUQsT0FBT08sSUFBSSxDQUFDTjtJQUV0QixNQUFPRCxPQUFPVSxNQUFNLEdBQUcsRUFBRztRQUN4QlYsT0FBT08sSUFBSSxDQUFDO1lBQ1ZFLElBQUlFLE9BQU9DLFVBQVU7WUFDckJOLE9BQU87WUFDUE8sS0FBSyxDQUFDO1lBQ05DLEtBQUssQ0FBQztRQUNSO0lBQ0Y7SUFFQSxPQUFPO1FBQ0xDLE9BQU9qQixjQUFjLFNBQVNFLFNBQVNBLE9BQU9HLE9BQU87UUFDckRKO0lBQ0Y7QUFDRjtBQUdBLE1BQU1pQixZQUFZLENBQUNELE9BQW1CakI7SUFDcENtQixRQUFRQyxHQUFHLENBQUMsZ0JBQTBCLE9BQVZwQjtJQUM1QixNQUFNcUIsT0FBT3hCLCtEQUFrQkEsQ0FBQ29CO0lBQ2hDLE1BQU1LLFdBQXVCLEVBQUU7SUFDL0IsSUFBSUMsYUFBYTtJQUNqQixJQUFJQyxRQUFRO0lBRVosTUFBTUMsZUFBZXpCLGNBQWMsVUFBVUEsY0FBYztJQUMzRCxNQUFNMEIsWUFBWTFCLGNBQWMsVUFBVUEsY0FBYztJQUV4RCxJQUFLLElBQUkyQixJQUFJLEdBQUdBLElBQUksR0FBR0EsSUFBSztRQUMxQixNQUFNNUIsT0FBTzBCLGVBQ1RKLElBQUksQ0FBQ00sRUFBRSxDQUFDQyxNQUFNLENBQUNDLFdBQ2ZSLEtBQUtTLEdBQUcsQ0FBQ2YsQ0FBQUEsTUFBT0EsR0FBRyxDQUFDWSxFQUFFLEVBQUVDLE1BQU0sQ0FBQ0M7UUFFbkMsSUFBSSxDQUFDOUIsS0FBS2EsTUFBTSxFQUFFO1FBRWxCLE1BQU0sRUFBRUssT0FBT2MsU0FBUyxFQUFFOUIsS0FBSyxFQUFFLEdBQUdILFlBQVlDLE1BQU0yQixZQUFZLFNBQVM7UUFDM0VILGNBQWN0QjtRQUVkOEIsVUFBVUMsT0FBTyxDQUFDLENBQUMxQixNQUFNMkI7WUFDdkIsSUFBSTNCLEtBQUtFLEtBQUssS0FBSyxHQUFHLFFBQVEsbUJBQW1CO1lBRWpELE1BQU1PLE1BQU1VLGVBQWVFLElBQUlNO1lBQy9CLE1BQU1qQixNQUFNUyxlQUFlUSxNQUFNTjtZQUVqQ0gsVUFBQUEsUUFBV2xCLEtBQUtTLEdBQUcsS0FBS0EsT0FBT1QsS0FBS1UsR0FBRyxLQUFLQTtZQUU1Q00sU0FBU2IsSUFBSSxDQUFDO2dCQUNaLEdBQUdILElBQUk7Z0JBQ1BTO2dCQUNBQztnQkFDQWtCLGFBQWE1QixLQUFLUyxHQUFHO2dCQUNyQm9CLGFBQWE3QixLQUFLVSxHQUFHO1lBQ3ZCO1FBQ0Y7SUFDRjtJQUVBLE9BQU87UUFDTEMsT0FBT0s7UUFDUHJCLE9BQU9zQjtRQUNQQztJQUNGO0FBQ0Y7QUFFTyxNQUFNWSxXQUFXLENBQUNuQixRQUFzQkMsVUFBVUQsT0FBTyxRQUFRO0FBQ2pFLE1BQU1vQixZQUFZLENBQUNwQixRQUFzQkMsVUFBVUQsT0FBTyxTQUFTO0FBQ25FLE1BQU1xQixTQUFTLENBQUNyQixRQUFzQkMsVUFBVUQsT0FBTyxNQUFNO0FBQzdELE1BQU1zQixXQUFXLENBQUN0QixRQUFzQkMsVUFBVUQsT0FBTyxRQUFRIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXERlbWV0cmlvUVxcRGVza3RvcFxcUHJvamVjdHNcXDIwNDgtbmV4dC1leHByZXNzXFxwYWNrYWdlc1xcc2hhcmVkLTIwNDgtbG9naWNcXHNyY1xcdXRpbHNcXG1vdmVMb2dpYy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3Rpb24gfSBmcm9tIFwiLi4vdHlwZXMvRGlyZWN0aW9uXCI7XHJcbmltcG9ydCB7IE1vdmVSZXN1bHQgfSBmcm9tIFwiLi4vdHlwZXMvTW92ZVJlc3VsdFwiO1xyXG5pbXBvcnQgeyBUaWxlRGF0YSB9IGZyb20gXCIuLi90eXBlcy9UaWxlRGF0YVwiO1xyXG5pbXBvcnQgeyBidWlsZEdyaWRGcm9tVGlsZXMgfSBmcm9tIFwiLi9ncmlkSGVscGVyXCI7XHJcblxyXG5cclxuY29uc3QgcHJvY2Vzc0xpbmUgPSAobGluZTogVGlsZURhdGFbXSwgZGlyZWN0aW9uOiBEaXJlY3Rpb24pID0+IHtcclxuICBsZXQgc2NvcmUgPSAwO1xyXG4gIGNvbnN0IHJlc3VsdDogVGlsZURhdGFbXSA9IFtdO1xyXG4gIGxldCBwcmV2OiBUaWxlRGF0YSB8IG51bGwgPSBudWxsO1xyXG5cclxuICBjb25zdCBvcmRlcmVkTGluZSA9IGRpcmVjdGlvbiA9PT0gJ2xlZnQnID8gWy4uLmxpbmVdIDogWy4uLmxpbmVdLnJldmVyc2UoKTtcclxuXHJcbiAgZm9yIChjb25zdCB0aWxlIG9mIG9yZGVyZWRMaW5lKSB7XHJcbiAgICBpZiAoIXByZXYpIHtcclxuICAgICAgcHJldiA9IHsgLi4udGlsZSwgaXNNZXJnZWQ6IGZhbHNlIH07XHJcbiAgICAgIGNvbnRpbnVlO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChwcmV2LnZhbHVlID09PSB0aWxlLnZhbHVlICYmICFwcmV2LmlzTWVyZ2VkICYmICF0aWxlLmlzTWVyZ2VkKSB7XHJcbiAgICAgIHJlc3VsdC5wdXNoKHtcclxuICAgICAgICAuLi50aWxlLFxyXG4gICAgICAgIHZhbHVlOiBwcmV2LnZhbHVlICogMixcclxuICAgICAgICBpc01lcmdlZDogdHJ1ZSxcclxuICAgICAgICBtZXJnZWRGcm9tOiBbcHJldi5pZCwgdGlsZS5pZF1cclxuICAgICAgfSk7XHJcbiAgICAgIHNjb3JlICs9IHByZXYudmFsdWUgKiAyO1xyXG4gICAgICBwcmV2ID0gbnVsbDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJlc3VsdC5wdXNoKHByZXYpO1xyXG4gICAgICBwcmV2ID0geyAuLi50aWxlLCBpc01lcmdlZDogZmFsc2UgfTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGlmIChwcmV2KSByZXN1bHQucHVzaChwcmV2KTtcclxuXHJcbiAgd2hpbGUgKHJlc3VsdC5sZW5ndGggPCA0KSB7XHJcbiAgICByZXN1bHQucHVzaCh7XHJcbiAgICAgIGlkOiBjcnlwdG8ucmFuZG9tVVVJRCgpLFxyXG4gICAgICB2YWx1ZTogMCxcclxuICAgICAgcm93OiAtMSxcclxuICAgICAgY29sOiAtMVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICByZXR1cm4ge1xyXG4gICAgdGlsZXM6IGRpcmVjdGlvbiA9PT0gJ2xlZnQnID8gcmVzdWx0IDogcmVzdWx0LnJldmVyc2UoKSxcclxuICAgIHNjb3JlXHJcbiAgfTtcclxufTtcclxuXHJcblxyXG5jb25zdCBtb3ZlVGlsZXMgPSAodGlsZXM6IFRpbGVEYXRhW10sIGRpcmVjdGlvbjogJ3VwJyB8ICdkb3duJyB8ICdsZWZ0JyB8ICdyaWdodCcpOiBNb3ZlUmVzdWx0ID0+IHtcclxuICBjb25zb2xlLmxvZyhgZGlyZWN0aW9ucyA6ICR7ZGlyZWN0aW9ufWApXHJcbiAgY29uc3QgZ3JpZCA9IGJ1aWxkR3JpZEZyb21UaWxlcyh0aWxlcyk7XHJcbiAgY29uc3QgbmV3VGlsZXM6IFRpbGVEYXRhW10gPSBbXTtcclxuICBsZXQgdG90YWxTY29yZSA9IDA7XHJcbiAgbGV0IG1vdmVkID0gZmFsc2U7XHJcblxyXG4gIGNvbnN0IGlzSG9yaXpvbnRhbCA9IGRpcmVjdGlvbiA9PT0gJ2xlZnQnIHx8IGRpcmVjdGlvbiA9PT0gJ3JpZ2h0JztcclxuICBjb25zdCBpc0ZvcndhcmQgPSBkaXJlY3Rpb24gPT09ICdsZWZ0JyB8fCBkaXJlY3Rpb24gPT09ICd1cCc7XHJcblxyXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgNDsgaSsrKSB7XHJcbiAgICBjb25zdCBsaW5lID0gaXNIb3Jpem9udGFsXHJcbiAgICAgID8gZ3JpZFtpXS5maWx0ZXIoQm9vbGVhbikgYXMgVGlsZURhdGFbXVxyXG4gICAgICA6IGdyaWQubWFwKHJvdyA9PiByb3dbaV0pLmZpbHRlcihCb29sZWFuKSBhcyBUaWxlRGF0YVtdO1xyXG5cclxuICAgIGlmICghbGluZS5sZW5ndGgpIGNvbnRpbnVlO1xyXG5cclxuICAgIGNvbnN0IHsgdGlsZXM6IHByb2Nlc3NlZCwgc2NvcmUgfSA9IHByb2Nlc3NMaW5lKGxpbmUsIGlzRm9yd2FyZCA/ICdsZWZ0JyA6ICdyaWdodCcpO1xyXG4gICAgdG90YWxTY29yZSArPSBzY29yZTtcclxuXHJcbiAgICBwcm9jZXNzZWQuZm9yRWFjaCgodGlsZSwgaWR4KSA9PiB7XHJcbiAgICAgIGlmICh0aWxlLnZhbHVlID09PSAwKSByZXR1cm47IC8vIHNraXAgZW1wdHkgdGlsZXNcclxuXHJcbiAgICAgIGNvbnN0IHJvdyA9IGlzSG9yaXpvbnRhbCA/IGkgOiBpZHg7XHJcbiAgICAgIGNvbnN0IGNvbCA9IGlzSG9yaXpvbnRhbCA/IGlkeCA6IGk7XHJcblxyXG4gICAgICBtb3ZlZCB8fD0gKHRpbGUucm93ICE9PSByb3cgfHwgdGlsZS5jb2wgIT09IGNvbCk7XHJcblxyXG4gICAgICBuZXdUaWxlcy5wdXNoKHtcclxuICAgICAgICAuLi50aWxlLFxyXG4gICAgICAgIHJvdyxcclxuICAgICAgICBjb2wsXHJcbiAgICAgICAgcHJldmlvdXNSb3c6IHRpbGUucm93LFxyXG4gICAgICAgIHByZXZpb3VzQ29sOiB0aWxlLmNvbFxyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHtcclxuICAgIHRpbGVzOiBuZXdUaWxlcyxcclxuICAgIHNjb3JlOiB0b3RhbFNjb3JlLFxyXG4gICAgbW92ZWRcclxuICB9O1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IG1vdmVMZWZ0ID0gKHRpbGVzOiBUaWxlRGF0YVtdKSA9PiBtb3ZlVGlsZXModGlsZXMsICdsZWZ0Jyk7XHJcbmV4cG9ydCBjb25zdCBtb3ZlUmlnaHQgPSAodGlsZXM6IFRpbGVEYXRhW10pID0+IG1vdmVUaWxlcyh0aWxlcywgJ3JpZ2h0Jyk7XHJcbmV4cG9ydCBjb25zdCBtb3ZlVXAgPSAodGlsZXM6IFRpbGVEYXRhW10pID0+IG1vdmVUaWxlcyh0aWxlcywgJ3VwJyk7XHJcbmV4cG9ydCBjb25zdCBtb3ZlRG93biA9ICh0aWxlczogVGlsZURhdGFbXSkgPT4gbW92ZVRpbGVzKHRpbGVzLCAnZG93bicpOyJdLCJuYW1lcyI6WyJidWlsZEdyaWRGcm9tVGlsZXMiLCJwcm9jZXNzTGluZSIsImxpbmUiLCJkaXJlY3Rpb24iLCJzY29yZSIsInJlc3VsdCIsInByZXYiLCJvcmRlcmVkTGluZSIsInJldmVyc2UiLCJ0aWxlIiwiaXNNZXJnZWQiLCJ2YWx1ZSIsInB1c2giLCJtZXJnZWRGcm9tIiwiaWQiLCJsZW5ndGgiLCJjcnlwdG8iLCJyYW5kb21VVUlEIiwicm93IiwiY29sIiwidGlsZXMiLCJtb3ZlVGlsZXMiLCJjb25zb2xlIiwibG9nIiwiZ3JpZCIsIm5ld1RpbGVzIiwidG90YWxTY29yZSIsIm1vdmVkIiwiaXNIb3Jpem9udGFsIiwiaXNGb3J3YXJkIiwiaSIsImZpbHRlciIsIkJvb2xlYW4iLCJtYXAiLCJwcm9jZXNzZWQiLCJmb3JFYWNoIiwiaWR4IiwicHJldmlvdXNSb3ciLCJwcmV2aW91c0NvbCIsIm1vdmVMZWZ0IiwibW92ZVJpZ2h0IiwibW92ZVVwIiwibW92ZURvd24iXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/../../packages/shared-2048-logic/src/utils/moveLogic.ts\n"));

/***/ })

});